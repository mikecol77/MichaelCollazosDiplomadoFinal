{"ast":null,"code":"import { Router } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(api, router) {\n      this.api = api;\n      this.router = router;\n      this.TOKEN_KEY = 'mcd_token';\n      this.USER_KEY = 'mcd_user';\n    }\n    register(data) {\n      return this.api.register(data).pipe(tap(res => this.persistSession(res)));\n    }\n    login(data) {\n      return this.api.login(data).pipe(tap(res => this.persistSession(res)));\n    }\n    persistSession(res) {\n      localStorage.setItem(this.TOKEN_KEY, res.token);\n      localStorage.setItem(this.USER_KEY, JSON.stringify(res.user));\n    }\n    logout() {\n      localStorage.removeItem(this.TOKEN_KEY);\n      localStorage.removeItem(this.USER_KEY);\n      this.router.navigate(['/auth']);\n    }\n    isLoggedIn() {\n      return !!this.getToken();\n    }\n    getToken() {\n      return localStorage.getItem(this.TOKEN_KEY);\n    }\n    getUser() {\n      const raw = localStorage.getItem(this.USER_KEY);\n      return raw ? JSON.parse(raw) : null;\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.Router));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
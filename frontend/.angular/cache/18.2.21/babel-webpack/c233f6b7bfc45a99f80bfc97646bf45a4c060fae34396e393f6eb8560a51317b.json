{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MICHAEL/Documents/MichaelCollazosDiplomadoFinal/MichaelCollazosDiplomadoFinal/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { TasksService } from '../../services/tasks.service';\nimport { NotificationService } from '../../services/notification.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tasks.service\";\nimport * as i2 from \"../../services/notification.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = (a0, a1, a2) => ({\n  ok: a0,\n  mid: a1,\n  low: a2\n});\nconst _c1 = (a0, a1, a2) => ({\n  \"chip-low\": a0,\n  \"chip-med\": a1,\n  \"chip-high\": a2\n});\nfunction TaskListComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\", 35);\n    i0.ɵɵelement(2, \"div\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 37);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r0.progress.pct, \"%\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(6, _c0, ctx_r0.progress.tone === \"ok\", ctx_r0.progress.tone === \"mid\", ctx_r0.progress.tone === \"low\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" \", ctx_r0.counts.done, \" de \", ctx_r0.counts.total, \" (\", ctx_r0.progress.pct, \"%) completadas \");\n  }\n}\nfunction TaskListComponent_button_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_button_29_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.enableNotifications());\n    });\n    i0.ɵɵtext(1, \"\\uD83D\\uDD14 Activar notificaciones\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_button_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_button_30_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.testNotification());\n    });\n    i0.ɵɵtext(1, \"Probar notificaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_div_49_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Este campo es obligatorio.\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction TaskListComponent_div_49_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Debe tener al menos 2 caracteres.\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction TaskListComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtemplate(1, TaskListComponent_div_49_ng_container_1_Template, 2, 0, \"ng-container\", 40)(2, TaskListComponent_div_49_ng_container_2_Template, 2, 0, \"ng-container\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.titleCtrl.errors == null ? null : ctx_r0.titleCtrl.errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.titleCtrl.errors == null ? null : ctx_r0.titleCtrl.errors[\"minlength\"]);\n  }\n}\nfunction TaskListComponent_div_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.errorMsg);\n  }\n}\nfunction TaskListComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1, \"Cargando...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_li_60_ng_container_2_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 51);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r4 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"overdue\", ctx_r0.isOverdue(t_r4));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" vence: \", i0.ɵɵpipeBind2(2, 3, t_r4.dueDate, \"shortDate\"), \" \");\n  }\n}\nfunction TaskListComponent_li_60_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 47)(2, \"div\")(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 48);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, TaskListComponent_li_60_ng_container_2_span_7_Template, 3, 6, \"span\", 49);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 50);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const t_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"text-decoration\", t_r4.done ? \"line-through\" : \"none\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(t_r4.title);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(10, _c1, t_r4.priority === \"low\", t_r4.priority === \"med\", t_r4.priority === \"high\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", t_r4.priority === \"high\" ? \"Alta\" : t_r4.priority === \"med\" ? \"Media\" : \"Baja\", \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", t_r4.dueDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 7, t_r4.createdAt, \"short\"));\n  }\n}\nfunction TaskListComponent_li_60_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelement(0, \"input\", 52);\n    i0.ɵɵelementStart(1, \"div\", 53)(2, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_60_ng_template_3_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const t_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.saveEdit(t_r4));\n    });\n    i0.ɵɵtext(3, \"Guardar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 55);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_60_ng_template_3_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.cancelEdit());\n    });\n    i0.ɵɵtext(5, \"Cancelar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.editCtrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.editCtrl.invalid);\n  }\n}\nfunction TaskListComponent_li_60_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 56)(1, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_60_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const t_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.startEdit(t_r4));\n    });\n    i0.ɵɵtext(2, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 57);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_60_div_5_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const t_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.toggleDone(t_r4));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_60_div_5_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const t_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.deleteTask(t_r4));\n    });\n    i0.ɵɵtext(6, \"Eliminar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const t_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(t_r4.done ? \"Marcar pendiente\" : \"Marcar completada\");\n  }\n}\nfunction TaskListComponent_li_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 43)(1, \"div\", 44);\n    i0.ɵɵtemplate(2, TaskListComponent_li_60_ng_container_2_Template, 11, 14, \"ng-container\", 45)(3, TaskListComponent_li_60_ng_template_3_Template, 6, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, TaskListComponent_li_60_div_5_Template, 7, 1, \"div\", 46);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r4 = ctx.$implicit;\n    const editBlock_r7 = i0.ɵɵreference(4);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.editId !== t_r4._id)(\"ngIfElse\", editBlock_r7);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.editId !== t_r4._id);\n  }\n}\nexport let TaskListComponent = /*#__PURE__*/(() => {\n  class TaskListComponent {\n    constructor(tasksService, notify) {\n      this.tasksService = tasksService;\n      this.notify = notify;\n      this.tasks = [];\n      // Crear\n      this.titleCtrl = new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(2)]\n      });\n      this.priorityCtrl = new FormControl('low', {\n        nonNullable: true\n      });\n      this.dueCtrl = new FormControl(null); // 'YYYY-MM-DD' o null\n      // Editar título\n      this.editCtrl = new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(2)]\n      });\n      this.editId = null;\n      // Buscar/Ordenar/Filtrar\n      this.searchCtrl = new FormControl('', {\n        nonNullable: true\n      });\n      this.sortCtrl = new FormControl('recent', {\n        nonNullable: true\n      });\n      this.filter = 'all';\n      this.loading = false;\n      this.errorMsg = '';\n    }\n    ngOnInit() {\n      this.fetch();\n      // Cuando vuelvas a la pestaña, volvemos a evaluar si hay que notificar\n      document.addEventListener('visibilitychange', () => {\n        if (!document.hidden) this.notify.tryNotify(this.tasks);\n      });\n    }\n    // =================== Helpers ===================\n    /** Convierte 'YYYY-MM-DD' a ISO usando 12:00 hora local (evita desfase de día por zona horaria). */\n    dateOnlyToIsoAtNoonLocal(dateStr) {\n      const [y, m, d] = dateStr.split('-').map(Number);\n      const localNoon = new Date(y, m - 1, d, 12, 0, 0, 0);\n      return localNoon.toISOString();\n    }\n    // =================== Derivados ===================\n    get counts() {\n      const total = this.tasks.length;\n      const done = this.tasks.filter(t => t.done).length;\n      return {\n        total,\n        done,\n        pending: total - done\n      };\n    }\n    setFilter(mode) {\n      this.filter = mode;\n    }\n    /** Progreso global (0–100) + tono para pintar la barra */\n    get progress() {\n      const {\n        total,\n        done\n      } = this.counts;\n      const pct = total ? Math.round(done / total * 100) : 0;\n      const tone = pct >= 80 ? 'ok' : pct >= 40 ? 'mid' : 'low';\n      return {\n        pct,\n        tone\n      };\n    }\n    /** Lista que se muestra (filtro + búsqueda + orden) */\n    get viewTasks() {\n      const q = (this.searchCtrl.value || '').toLowerCase().trim();\n      let list = this.tasks.filter(t => {\n        const passFilter = this.filter === 'all' ? true : this.filter === 'done' ? t.done : !t.done;\n        const passSearch = !q || (t.title || '').toLowerCase().includes(q);\n        return passFilter && passSearch;\n      });\n      switch (this.sortCtrl.value) {\n        case 'az':\n          list = list.sort((a, b) => (a.title || '').localeCompare(b.title || ''));\n          break;\n        case 'due':\n          list = list.sort((a, b) => (a.dueDate ? +new Date(a.dueDate) : Infinity) - (b.dueDate ? +new Date(b.dueDate) : Infinity));\n          break;\n        case 'priority':\n          const rank = {\n            high: 0,\n            med: 1,\n            low: 2\n          };\n          list = list.sort((a, b) => (rank[a.priority || 'low'] ?? 2) - (rank[b.priority || 'low'] ?? 2));\n          break;\n        default:\n          // 'recent'\n          list = list.sort((a, b) => +new Date(b.createdAt) - +new Date(a.createdAt));\n      }\n      return list;\n    }\n    // =================== CRUD ===================\n    fetch() {\n      this.loading = true;\n      this.errorMsg = '';\n      this.tasksService.list().subscribe({\n        next: data => {\n          this.tasks = data;\n          this.loading = false;\n          // Revisa y lanza notificaciones resumen si procede\n          this.notify.tryNotify(this.tasks);\n        },\n        error: () => {\n          this.errorMsg = 'No se pudieron cargar las tareas';\n          this.loading = false;\n        }\n      });\n    }\n    addTask() {\n      if (this.titleCtrl.invalid) return;\n      const title = this.titleCtrl.value.trim();\n      if (!title) return;\n      const priority = this.priorityCtrl.value;\n      const rawDate = this.dueCtrl.value; // 'YYYY-MM-DD' o null\n      // Convertimos a ISO con 12:00 local para evitar desfase de día\n      const dueDate = rawDate ? this.dateOnlyToIsoAtNoonLocal(rawDate) : null;\n      this.tasksService.create(title, priority, dueDate).subscribe({\n        next: t => {\n          this.tasks.unshift(t);\n          this.titleCtrl.reset('', {\n            emitEvent: false\n          });\n          this.titleCtrl.markAsPristine();\n          this.titleCtrl.markAsUntouched();\n          this.priorityCtrl.setValue('low');\n          this.dueCtrl.setValue(null);\n          // Tras crear, re-evaluamos por si corresponde avisar\n          this.notify.tryNotify(this.tasks);\n        },\n        error: () => {\n          this.errorMsg = 'Error creando la tarea';\n        }\n      });\n    }\n    toggleDone(task) {\n      this.tasksService.toggle(task._id).subscribe({\n        next: t => {\n          task.done = t.done;\n          this.notify.tryNotify(this.tasks);\n        },\n        error: () => {\n          this.errorMsg = 'Error actualizando la tarea';\n        }\n      });\n    }\n    // Editar título\n    startEdit(task) {\n      this.editId = task._id;\n      this.editCtrl.setValue(task.title);\n    }\n    cancelEdit() {\n      this.editId = null;\n      this.editCtrl.reset('', {\n        emitEvent: false\n      });\n    }\n    saveEdit(task) {\n      if (!this.editId || this.editCtrl.invalid) return;\n      const newTitle = this.editCtrl.value.trim();\n      if (!newTitle) return;\n      this.tasksService.updateTitle(this.editId, newTitle).subscribe({\n        next: t => {\n          task.title = t.title;\n          this.editId = null;\n          this.editCtrl.reset('', {\n            emitEvent: false\n          });\n        },\n        error: () => {\n          this.errorMsg = 'Error guardando cambios';\n        }\n      });\n    }\n    // Actualizar prioridad/fecha (si quisieras inline en el futuro)\n    updateMeta(task, change) {\n      // Si viene 'YYYY-MM-DD', convertir antes de enviar\n      const payload = {\n        ...change\n      };\n      if (payload.dueDate && typeof payload.dueDate === 'string' && payload.dueDate.length === 10 && !payload.dueDate.includes('T')) {\n        payload.dueDate = this.dateOnlyToIsoAtNoonLocal(payload.dueDate);\n      }\n      this.tasksService.updateMeta(task._id, payload).subscribe({\n        next: t => {\n          task.priority = t.priority;\n          task.dueDate = t.dueDate;\n          this.notify.tryNotify(this.tasks);\n        },\n        error: () => {\n          this.errorMsg = 'Error actualizando datos';\n        }\n      });\n    }\n    deleteTask(task) {\n      if (!confirm(`¿Eliminar la tarea \"${task.title}\"?`)) return;\n      this.tasksService.remove(task._id).subscribe({\n        next: () => {\n          this.tasks = this.tasks.filter(x => x._id !== task._id);\n          this.notify.tryNotify(this.tasks);\n        },\n        error: () => {\n          this.errorMsg = 'Error eliminando la tarea';\n        }\n      });\n    }\n    clearCompleted() {\n      if (!confirm('¿Eliminar todas las tareas completadas?')) return;\n      this.tasksService.clearCompleted().subscribe({\n        next: () => {\n          this.tasks = this.tasks.filter(t => !t.done);\n          this.notify.tryNotify(this.tasks);\n        },\n        error: () => {\n          this.errorMsg = 'No se pudieron limpiar las completadas';\n        }\n      });\n    }\n    isOverdue(t) {\n      // Vencida si today 00:00 > dueDate y no está completada\n      return !!t.dueDate && !t.done && new Date(t.dueDate) < new Date(new Date().toDateString());\n    }\n    // =================== Notificaciones: UI helpers ===================\n    get notifEnabled() {\n      return this.notify.enabled;\n    }\n    enableNotifications() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const res = yield _this.notify.requestPermission();\n        if (res === 'granted') {\n          _this.notify.showSample(); // feedback inmediato\n          _this.notify.tryNotify(_this.tasks); // evalúa por si ya hay tareas relevantes\n        } else {\n          alert('No se activaron las notificaciones del navegador.');\n        }\n      })();\n    }\n    testNotification() {\n      this.notify.showSample();\n    }\n    static {\n      this.ɵfac = function TaskListComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.NotificationService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TaskListComponent,\n        selectors: [[\"app-task-list\"]],\n        decls: 61,\n        vars: 22,\n        consts: [[\"editBlock\", \"\"], [1, \"card\"], [1, \"space-between\"], [2, \"margin\", \"0\"], [2, \"font-size\", \".9rem\", \"color\", \"var(--muted)\"], [\"class\", \"progress-wrap mt-2\", 4, \"ngIf\"], [1, \"row\", \"mt-3\"], [\"placeholder\", \"Buscar por t\\u00EDtulo...\", 1, \"input\", 3, \"formControl\"], [1, \"input\", 2, \"max-width\", \"210px\", 3, \"formControl\"], [\"value\", \"recent\"], [\"value\", \"az\"], [\"value\", \"due\"], [\"value\", \"priority\"], [1, \"btn\", \"danger\", 3, \"click\"], [1, \"tools-row\"], [\"class\", \"btn-light\", 3, \"click\", 4, \"ngIf\"], [1, \"row\", \"mt-3\", \"task-form\"], [\"placeholder\", \"Nueva tarea (ej: Llamar al cliente)\", \"aria-label\", \"T\\u00EDtulo de la tarea\", 1, \"input\", \"task-control\", 3, \"formControl\"], [1, \"stack\", 2, \"max-width\", \"150px\"], [\"id\", \"prioritySelect\", \"title\", \"Establece la prioridad de tu tarea\", \"aria-label\", \"Prioridad de la tarea\", \"aria-describedby\", \"priorityHelp\", 1, \"input\", \"task-control\", 3, \"formControl\"], [\"value\", \"low\"], [\"value\", \"med\"], [\"value\", \"high\"], [\"id\", \"priorityHelp\", 1, \"hint\"], [1, \"stack\", 2, \"max-width\", \"180px\"], [\"id\", \"dueInput\", \"type\", \"date\", \"title\", \"Establece la fecha l\\u00EDmite de tu tarea\", \"aria-label\", \"Fecha l\\u00EDmite de la tarea\", \"aria-describedby\", \"dueHelp\", \"placeholder\", \"dd/mm/aaaa\", 1, \"input\", \"task-control\", 3, \"formControl\"], [\"id\", \"dueHelp\", 1, \"hint\"], [1, \"btn\", \"task-control\", 3, \"click\", \"disabled\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"btn\", 3, \"click\"], [\"class\", \"alert error mt-2\", 4, \"ngIf\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [2, \"list-style\", \"none\", \"padding\", \"0\", \"margin-top\", \"12px\"], [\"class\", \"row card\", \"style\", \"margin-bottom:10px; align-items:center;\", 4, \"ngFor\", \"ngForOf\"], [1, \"progress-wrap\", \"mt-2\"], [1, \"progress\"], [1, \"progress-bar\", 3, \"ngClass\"], [1, \"progress-label\"], [1, \"btn-light\", 3, \"click\"], [1, \"error\"], [4, \"ngIf\"], [1, \"alert\", \"error\", \"mt-2\"], [1, \"mt-3\"], [1, \"row\", \"card\", 2, \"margin-bottom\", \"10px\", \"align-items\", \"center\"], [2, \"flex\", \"1\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"row\", 2, \"justify-content\", \"space-between\", \"align-items\", \"center\"], [1, \"chip\", 3, \"ngClass\"], [\"class\", \"due-badge\", 3, \"overdue\", 4, \"ngIf\"], [2, \"color\", \"var(--muted)\", \"font-size\", \".85rem\"], [1, \"due-badge\"], [1, \"input\", 3, \"formControl\"], [1, \"row\", \"mt-2\"], [1, \"btn\", \"success\", 3, \"click\", \"disabled\"], [1, \"btn\", \"secondary\", 3, \"click\"], [1, \"row\"], [1, \"btn\", \"success\", 3, \"click\"]],\n        template: function TaskListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h3\", 3);\n            i0.ɵɵtext(3, \"Mis Tareas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"div\", 4);\n            i0.ɵɵtext(5, \" Total: \");\n            i0.ɵɵelementStart(6, \"b\");\n            i0.ɵɵtext(7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(8, \" \\u00B7 Pendientes: \");\n            i0.ɵɵelementStart(9, \"b\");\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(11, \" \\u00B7 Completadas: \");\n            i0.ɵɵelementStart(12, \"b\");\n            i0.ɵɵtext(13);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵtemplate(14, TaskListComponent_div_14_Template, 5, 10, \"div\", 5);\n            i0.ɵɵelementStart(15, \"div\", 6);\n            i0.ɵɵelement(16, \"input\", 7);\n            i0.ɵɵelementStart(17, \"select\", 8)(18, \"option\", 9);\n            i0.ɵɵtext(19, \"M\\u00E1s recientes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"option\", 10);\n            i0.ɵɵtext(21, \"A\\u2013Z\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"option\", 11);\n            i0.ɵɵtext(23, \"Vencimiento primero\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(24, \"option\", 12);\n            i0.ɵɵtext(25, \"Prioridad alta primero\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(26, \"button\", 13);\n            i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_26_listener() {\n              return ctx.clearCompleted();\n            });\n            i0.ɵɵtext(27, \"Limpiar completadas\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(28, \"div\", 14);\n            i0.ɵɵtemplate(29, TaskListComponent_button_29_Template, 2, 0, \"button\", 15)(30, TaskListComponent_button_30_Template, 2, 0, \"button\", 15);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"div\", 16);\n            i0.ɵɵelement(32, \"input\", 17);\n            i0.ɵɵelementStart(33, \"div\", 18)(34, \"select\", 19)(35, \"option\", 20);\n            i0.ɵɵtext(36, \"\\uD83D\\uDFE2 Baja\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(37, \"option\", 21);\n            i0.ɵɵtext(38, \"\\uD83D\\uDFE1 Media\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(39, \"option\", 22);\n            i0.ɵɵtext(40, \"\\uD83D\\uDD34 Alta\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(41, \"small\", 23);\n            i0.ɵɵtext(42, \"Establece la prioridad de tu tarea\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(43, \"div\", 24);\n            i0.ɵɵelement(44, \"input\", 25);\n            i0.ɵɵelementStart(45, \"small\", 26);\n            i0.ɵɵtext(46, \"Establece la fecha l\\u00EDmite de tu tarea\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(47, \"button\", 27);\n            i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_47_listener() {\n              return ctx.addTask();\n            });\n            i0.ɵɵtext(48, \" Agregar \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(49, TaskListComponent_div_49_Template, 3, 2, \"div\", 28);\n            i0.ɵɵelementStart(50, \"div\", 6)(51, \"button\", 29);\n            i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_51_listener() {\n              return ctx.setFilter(\"all\");\n            });\n            i0.ɵɵtext(52, \"Todas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(53, \"button\", 29);\n            i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_53_listener() {\n              return ctx.setFilter(\"pending\");\n            });\n            i0.ɵɵtext(54, \"Pendientes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(55, \"button\", 29);\n            i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_55_listener() {\n              return ctx.setFilter(\"done\");\n            });\n            i0.ɵɵtext(56, \"Completadas\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(57, TaskListComponent_div_57_Template, 2, 1, \"div\", 30)(58, TaskListComponent_div_58_Template, 2, 0, \"div\", 31);\n            i0.ɵɵelementStart(59, \"ul\", 32);\n            i0.ɵɵtemplate(60, TaskListComponent_li_60_Template, 6, 3, \"li\", 33);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵtextInterpolate(ctx.counts.total);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.counts.pending);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.counts.done);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.counts.total > 0);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formControl\", ctx.searchCtrl);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"formControl\", ctx.sortCtrl);\n            i0.ɵɵadvance(12);\n            i0.ɵɵproperty(\"ngIf\", !ctx.notifEnabled);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.notifEnabled);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formControl\", ctx.titleCtrl);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formControl\", ctx.priorityCtrl);\n            i0.ɵɵadvance(10);\n            i0.ɵɵproperty(\"formControl\", ctx.dueCtrl);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"disabled\", ctx.titleCtrl.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.titleCtrl.touched && ctx.titleCtrl.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"secondary\", ctx.filter !== \"all\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"secondary\", ctx.filter !== \"pending\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"secondary\", ctx.filter !== \"done\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMsg);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.viewTasks);\n          }\n        },\n        dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.FormControlDirective, i3.DatePipe],\n        styles: [\".chip[_ngcontent-%COMP%]{display:inline-block;padding:2px 8px;border-radius:999px;font-size:12px;margin-left:8px;border:1px solid transparent}.chip-low[_ngcontent-%COMP%]{background:#e8f7ee;color:#0f5132;border-color:#badbcc}.chip-med[_ngcontent-%COMP%]{background:#fff7e6;color:#7a5b00;border-color:#ffe08a}.chip-high[_ngcontent-%COMP%]{background:#fee2e2;color:#7f1d1d;border-color:#fecaca}.due-badge[_ngcontent-%COMP%]{display:inline-block;margin-left:8px;padding:2px 8px;border-radius:8px;font-size:12px;background:#e5e7eb;color:#374151}.due-badge.overdue[_ngcontent-%COMP%]{background:#fde68a;color:#7a3b00}.task-form[_ngcontent-%COMP%]{align-items:flex-start}.task-form[_ngcontent-%COMP%]   .task-control[_ngcontent-%COMP%]{height:40px}.task-form[_ngcontent-%COMP%]   .btn.task-control[_ngcontent-%COMP%]{display:inline-flex;align-items:center;padding:0 14px;line-height:1}.stack[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:4px}.hint[_ngcontent-%COMP%]{font-size:.8rem;color:var(--muted);line-height:1.2}.progress-wrap[_ngcontent-%COMP%]{display:grid;gap:6px}.progress[_ngcontent-%COMP%]{width:100%;height:10px;background:#e5e7eb;border-radius:999px;overflow:hidden}.progress-bar[_ngcontent-%COMP%]{height:100%;width:0%;border-radius:999px;transition:width .3s ease;background:var(--primary)}.progress-label[_ngcontent-%COMP%]{font-size:.85rem;color:var(--muted)}.progress-bar.ok[_ngcontent-%COMP%]{background:#16a34a}.progress-bar.mid[_ngcontent-%COMP%]{background:#f59e0b}.progress-bar.low[_ngcontent-%COMP%]{background:#9ca3af}body.dark[_ngcontent-%COMP%]   .progress[_ngcontent-%COMP%]{background:#334155}.tools-row[_ngcontent-%COMP%]{display:flex;gap:8px;flex-wrap:wrap;margin:8px 0 6px}.btn-light[_ngcontent-%COMP%]{background:#f3f4f6;border:1px solid #e5e7eb;border-radius:8px;padding:8px 10px;cursor:pointer;font-weight:600}.btn-light[_ngcontent-%COMP%]:hover{background:#e5e7eb}\"]\n      });\n    }\n  }\n  return TaskListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
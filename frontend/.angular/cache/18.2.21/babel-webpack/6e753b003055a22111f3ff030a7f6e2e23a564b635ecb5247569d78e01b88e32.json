{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { TasksService } from '../../services/tasks.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tasks.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TaskListComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Debe tener al menos 2 caracteres. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.errorMsg);\n  }\n}\nfunction TaskListComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \"Cargando...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_li_29_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const t_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"text-decoration\", t_r2.done ? \"line-through\" : \"none\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(t_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 4, t_r2.createdAt, \"short\"));\n  }\n}\nfunction TaskListComponent_li_29_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelement(0, \"input\", 22);\n    i0.ɵɵelementStart(1, \"div\", 23)(2, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_29_ng_template_3_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const t_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.saveEdit(t_r2));\n    });\n    i0.ɵɵtext(3, \"Guardar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_29_ng_template_3_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.cancelEdit());\n    });\n    i0.ɵɵtext(5, \"Cancelar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.editCtrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.editCtrl.invalid);\n  }\n}\nfunction TaskListComponent_li_29_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_29_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const t_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.startEdit(t_r2));\n    });\n    i0.ɵɵtext(2, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_29_div_5_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const t_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.toggleDone(t_r2));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_29_div_5_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const t_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.deleteTask(t_r2));\n    });\n    i0.ɵɵtext(6, \"Eliminar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const t_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(t_r2.done ? \"Marcar pendiente\" : \"Marcar completada\");\n  }\n}\nfunction TaskListComponent_li_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"div\", 18);\n    i0.ɵɵtemplate(2, TaskListComponent_li_29_ng_container_2_Template, 6, 7, \"ng-container\", 19)(3, TaskListComponent_li_29_ng_template_3_Template, 6, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, TaskListComponent_li_29_div_5_Template, 7, 1, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r2 = ctx.$implicit;\n    const editBlock_r5 = i0.ɵɵreference(4);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.editId !== t_r2._id)(\"ngIfElse\", editBlock_r5);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.editId !== t_r2._id);\n  }\n}\nexport let TaskListComponent = /*#__PURE__*/(() => {\n  class TaskListComponent {\n    constructor(tasksService) {\n      this.tasksService = tasksService;\n      this.tasks = [];\n      // Form controls\n      this.titleCtrl = new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(2)]\n      });\n      this.editCtrl = new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(2)]\n      });\n      // Estado de edición\n      this.editId = null;\n      // Estado UI\n      this.loading = false;\n      this.errorMsg = '';\n      this.filter = 'all';\n    }\n    ngOnInit() {\n      this.fetch();\n    }\n    /** Lista filtrada según el modo */\n    get filteredTasks() {\n      if (this.filter === 'pending') return this.tasks.filter(t => !t.done);\n      if (this.filter === 'done') return this.tasks.filter(t => t.done);\n      return this.tasks;\n    }\n    /** Contadores para cabecera */\n    get counts() {\n      const total = this.tasks.length;\n      const done = this.tasks.filter(t => t.done).length;\n      return {\n        total,\n        done,\n        pending: total - done\n      };\n    }\n    setFilter(mode) {\n      this.filter = mode;\n    }\n    /** Cargar tareas del usuario autenticado */\n    fetch() {\n      this.loading = true;\n      this.errorMsg = '';\n      this.tasksService.list().subscribe({\n        next: data => {\n          this.tasks = data;\n          this.loading = false;\n        },\n        error: () => {\n          this.errorMsg = 'No se pudieron cargar las tareas';\n          this.loading = false;\n        }\n      });\n    }\n    /** Crear nueva tarea */\n    addTask() {\n      if (this.titleCtrl.invalid) return;\n      const title = this.titleCtrl.value.trim();\n      if (!title) return;\n      this.tasksService.create(title).subscribe({\n        next: t => {\n          this.tasks.unshift(t);\n          // Importante: limpiamos valor y estado para que no salga el error visual\n          this.titleCtrl.reset('', {\n            emitEvent: false\n          });\n          this.titleCtrl.markAsPristine();\n          this.titleCtrl.markAsUntouched();\n        },\n        error: () => {\n          this.errorMsg = 'Error creando la tarea';\n        }\n      });\n    }\n    /** Alternar completada/pendiente */\n    toggleDone(task) {\n      this.tasksService.toggle(task._id).subscribe({\n        next: t => {\n          task.done = t.done;\n        },\n        error: () => {\n          this.errorMsg = 'Error actualizando la tarea';\n        }\n      });\n    }\n    /** Iniciar edición inline */\n    startEdit(task) {\n      this.editId = task._id;\n      this.editCtrl.setValue(task.title);\n    }\n    /** Cancelar edición */\n    cancelEdit() {\n      this.editId = null;\n      this.editCtrl.reset('', {\n        emitEvent: false\n      });\n    }\n    /** Guardar cambios de edición */\n    saveEdit(task) {\n      if (!this.editId || this.editCtrl.invalid) return;\n      const newTitle = this.editCtrl.value.trim();\n      if (!newTitle) return;\n      this.tasksService.updateTitle(this.editId, newTitle).subscribe({\n        next: t => {\n          task.title = t.title;\n          this.editId = null;\n          this.editCtrl.reset('', {\n            emitEvent: false\n          });\n        },\n        error: () => {\n          this.errorMsg = 'Error guardando cambios';\n        }\n      });\n    }\n    /** Eliminar tarea */\n    deleteTask(task) {\n      if (!confirm(`¿Eliminar la tarea \"${task.title}\"?`)) return;\n      this.tasksService.remove(task._id).subscribe({\n        next: () => {\n          this.tasks = this.tasks.filter(x => x._id !== task._id);\n        },\n        error: () => {\n          this.errorMsg = 'Error eliminando la tarea';\n        }\n      });\n    }\n    static {\n      this.ɵfac = function TaskListComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TaskListComponent,\n        selectors: [[\"app-task-list\"]],\n        decls: 30,\n        vars: 15,\n        consts: [[\"editBlock\", \"\"], [1, \"card\"], [1, \"space-between\"], [2, \"margin\", \"0\"], [2, \"font-size\", \".9rem\", \"color\", \"var(--muted)\"], [1, \"row\", \"mt-3\"], [\"placeholder\", \"Nueva tarea (ej: Llamar al cliente)\", 1, \"input\", 3, \"formControl\"], [1, \"btn\", 3, \"click\", \"disabled\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"btn\", 3, \"click\"], [\"class\", \"alert error mt-2\", 4, \"ngIf\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [2, \"list-style\", \"none\", \"padding\", \"0\", \"margin-top\", \"12px\"], [\"class\", \"row card\", \"style\", \"margin-bottom:10px; align-items:center;\", 4, \"ngFor\", \"ngForOf\"], [1, \"error\"], [1, \"alert\", \"error\", \"mt-2\"], [1, \"mt-3\"], [1, \"row\", \"card\", 2, \"margin-bottom\", \"10px\", \"align-items\", \"center\"], [2, \"flex\", \"1\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"row\", 4, \"ngIf\"], [2, \"color\", \"var(--muted)\", \"font-size\", \".85rem\"], [1, \"input\", 3, \"formControl\"], [1, \"row\", \"mt-2\"], [1, \"btn\", \"success\", 3, \"click\", \"disabled\"], [1, \"btn\", \"secondary\", 3, \"click\"], [1, \"row\"], [1, \"btn\", \"success\", 3, \"click\"], [1, \"btn\", \"danger\", 3, \"click\"]],\n        template: function TaskListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h3\", 3);\n            i0.ɵɵtext(3, \"Mis Tareas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"div\", 4);\n            i0.ɵɵtext(5, \" Total: \");\n            i0.ɵɵelementStart(6, \"b\");\n            i0.ɵɵtext(7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(8, \" \\u00B7 Pendientes: \");\n            i0.ɵɵelementStart(9, \"b\");\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(11, \" \\u00B7 Completadas: \");\n            i0.ɵɵelementStart(12, \"b\");\n            i0.ɵɵtext(13);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(14, \"div\", 5);\n            i0.ɵɵelement(15, \"input\", 6);\n            i0.ɵɵelementStart(16, \"button\", 7);\n            i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_16_listener() {\n              return ctx.addTask();\n            });\n            i0.ɵɵtext(17, \"Agregar\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(18, TaskListComponent_div_18_Template, 2, 0, \"div\", 8);\n            i0.ɵɵelementStart(19, \"div\", 5)(20, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_20_listener() {\n              return ctx.setFilter(\"all\");\n            });\n            i0.ɵɵtext(21, \"Todas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_22_listener() {\n              return ctx.setFilter(\"pending\");\n            });\n            i0.ɵɵtext(23, \"Pendientes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(24, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_24_listener() {\n              return ctx.setFilter(\"done\");\n            });\n            i0.ɵɵtext(25, \"Completadas\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(26, TaskListComponent_div_26_Template, 2, 1, \"div\", 10)(27, TaskListComponent_div_27_Template, 2, 0, \"div\", 11);\n            i0.ɵɵelementStart(28, \"ul\", 12);\n            i0.ɵɵtemplate(29, TaskListComponent_li_29_Template, 6, 3, \"li\", 13);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵtextInterpolate(ctx.counts.total);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.counts.pending);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.counts.done);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formControl\", ctx.titleCtrl);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.titleCtrl.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.titleCtrl.touched && ctx.titleCtrl.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"secondary\", ctx.filter !== \"all\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"secondary\", ctx.filter !== \"pending\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"secondary\", ctx.filter !== \"done\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMsg);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.filteredTasks);\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlDirective, i2.DatePipe]\n      });\n    }\n  }\n  return TaskListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
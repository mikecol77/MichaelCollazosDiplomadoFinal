{"ast":null,"code":"import { TasksService } from '../../services/tasks.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tasks.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TaskListComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Debe tener al menos 2 caracteres. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.errorMsg);\n  }\n}\nfunction TaskListComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \"Cargando...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 14)(1, \"div\", 15)(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 16);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_12_Template_button_click_7_listener() {\n      const t_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.toggleDone(t_r3));\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const t_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"text-decoration\", t_r3.done ? \"line-through\" : \"none\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(t_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(6, 5, t_r3.createdAt, \"short\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(t_r3.done ? \"Marcar pendiente\" : \"Marcar completada\");\n  }\n}\nexport let TaskListComponent = /*#__PURE__*/(() => {\n  class TaskListComponent {\n    constructor(tasksService) {\n      this.tasksService = tasksService;\n      this.tasks = [];\n      this.titleCtrl = new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(2)]\n      });\n      this.loading = false;\n      this.errorMsg = '';\n    }\n    ngOnInit() {\n      this.fetch();\n    }\n    fetch() {\n      this.loading = true;\n      this.errorMsg = '';\n      this.tasksService.list().subscribe({\n        next: data => {\n          this.tasks = data;\n          this.loading = false;\n        },\n        error: () => {\n          this.errorMsg = 'No se pudieron cargar las tareas';\n          this.loading = false;\n        }\n      });\n    }\n    addTask() {\n      if (this.titleCtrl.invalid) return;\n      const title = this.titleCtrl.value.trim();\n      if (!title) return;\n      this.tasksService.create(title).subscribe({\n        next: t => {\n          this.tasks.unshift(t);\n          this.titleCtrl.setValue('');\n        },\n        error: () => {\n          this.errorMsg = 'Error creando la tarea';\n        }\n      });\n    }\n    toggleDone(task) {\n      this.tasksService.toggle(task._id).subscribe({\n        next: t => {\n          task.done = t.done;\n        },\n        error: () => {\n          this.errorMsg = 'Error actualizando la tarea';\n        }\n      });\n    }\n    static {\n      this.ɵfac = function TaskListComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TaskListComponent,\n        selectors: [[\"app-task-list\"]],\n        decls: 13,\n        vars: 6,\n        consts: [[1, \"card\"], [1, \"space-between\"], [2, \"margin\", \"0\"], [1, \"row\", \"mt-3\"], [\"placeholder\", \"Nueva tarea (ej: Llamar al cliente)\", 1, \"input\", 3, \"formControl\"], [1, \"btn\", 3, \"click\", \"disabled\"], [\"class\", \"error\", 4, \"ngIf\"], [\"class\", \"alert error mt-2\", 4, \"ngIf\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [2, \"list-style\", \"none\", \"padding\", \"0\", \"margin-top\", \"12px\"], [\"class\", \"row card\", \"style\", \"margin-bottom:8px; align-items:center;\", 4, \"ngFor\", \"ngForOf\"], [1, \"error\"], [1, \"alert\", \"error\", \"mt-2\"], [1, \"mt-3\"], [1, \"row\", \"card\", 2, \"margin-bottom\", \"8px\", \"align-items\", \"center\"], [2, \"flex\", \"1\"], [2, \"color\", \"var(--muted)\", \"font-size\", \".85rem\"], [1, \"btn\", \"success\", 3, \"click\"]],\n        template: function TaskListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n            i0.ɵɵtext(3, \"Mis Tareas\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"div\", 3);\n            i0.ɵɵelement(5, \"input\", 4);\n            i0.ɵɵelementStart(6, \"button\", 5);\n            i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_6_listener() {\n              return ctx.addTask();\n            });\n            i0.ɵɵtext(7, \"Agregar\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(8, TaskListComponent_div_8_Template, 2, 0, \"div\", 6)(9, TaskListComponent_div_9_Template, 2, 1, \"div\", 7)(10, TaskListComponent_div_10_Template, 2, 0, \"div\", 8);\n            i0.ɵɵelementStart(11, \"ul\", 9);\n            i0.ɵɵtemplate(12, TaskListComponent_li_12_Template, 9, 8, \"li\", 10);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"formControl\", ctx.titleCtrl);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.titleCtrl.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.titleCtrl.touched && ctx.titleCtrl.invalid);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMsg);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlDirective, i2.DatePipe]\n      });\n    }\n  }\n  return TaskListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}